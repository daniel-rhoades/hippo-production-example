#
# Ansible playbook for provisioning production-ready infrastructure hosting a deployment of the Hippo CMS product.
#
---
- name: Website | Provision all required infrastructure
  hosts: localhost
  connection: local
  gather_facts: no
  pre_tasks:
    - name: Website | Check prerequisites
      include: provision/prerequisites/prerequisites.yml
      tags: ['provision', 'prerequisites']
  post_tasks:
    - name: Website | Provision networking infrastructure
      include: provision/networking/provision-networking.yml
      tags: ['provision', 'networking']

    - name: Website | Provision database infrastructure
      include: provision/database/provision-database.yml
      tags: ['provision', 'database']

    - name: Website | Provision webserver infrastructure
      include: provision/webservers/provision-webservers.yml
      tags: ['provision', 'webservers']

    - name: Website | Provision load balancers
      include: provision/loadbalancers/provision-loadbalancers.yml
      tags: ['provision', 'loadbalancers']

    - name: Website | Provision DNS
      include: provision/dns/provision-dns.yml
      tags: ['provision', 'dns']

- name: Website | Configure database
  hosts: contentstore_instance
  sudo: true
  pre_tasks:
    - name: Website | Process database configuration prerequisites
      include: configure/prerequisites/prerequisites-database.yml
      tags: ['configure', 'database', 'prerequisites']
  roles:
    # Install docker service
    - {
        role: angstwad.docker_ubuntu,
        tags: ['configure', 'database', 'apply_role', 'install_docker'],
        when: requires_docker is defined and requires_docker == true and install_docker == true
      }

    # Configure the instance as a Hippo Content Store
    - {
        role: hippo-contentstore,
        contentstore_container_name: "{{ hostvars['localhost'].contentstore_container_name }}",
      }

- name: Website | Configure Content Authoring webservers (process pre-reqs)
  hosts:
    - contentauthoring_instances
    - contentdelivery_instances
  gather_facts: no
  tasks:
    - name: Website | Process webserver configuration prerequisites
      include: configure/prerequisites/prerequisites-webserver.yml
      tags: ['configure', 'webservers', 'prerequisites']

- name: Website | Configure Content Authoring webservers
  hosts: contentauthoring_instances
  sudo: true
  roles:
    # Install docker service
    - {
        role: angstwad.docker_ubuntu,
        tags: ['configure', 'webservers', 'apply_role', 'install_docker'],
        when: install_docker == true
      }

    # Install docker-hippo-tomcat role configured as the Content Authoring container
    - {
        role: docker-hippo-tomcat,
        docker_image: "{{ contentauthoring_appserver_docker_image }}",
        container_name: "{{ contentauthoring_appserver_container_name }}",
        container_port: "{{ contentauthoring_appserver_container_port }}",
        distribution_src: "{{ contentauthoring_distribution_src_directory }}",
        contentstore_database_host: "{{ hostvars['localhost'].contentstore_database_host }}",
        contentstore_container_name: "{{ hostvars['localhost'].contentstore_container_name }}",
        url: "http://localhost:{{ contentauthoring_appserver_container_port }}/cms",
        expected_http_response: 302,
        tags: ['configure', 'webservers', 'apply_role', 'install_hippo'],
      }

    # Install docker-nginx-hippo configured to proxy requests to the Content Authoring container
    - {
        role: docker-nginx-hippo,
        docker_image: "{{ contentauthoring_reverseproxy_docker_image }}",
        container_name: "{{ contentauthoring_reverseproxy_container_name }}",
        container_port: "{{ contentauthoring_reverseproxy_container_port }}",
        appserver_container_name: "{{ contentauthoring_appserver_container_name }}",
        hippo_component: cms,
        url: "http://localhost:{{ contentauthoring_reverseproxy_container_port }}/",
        expected_http_response: 302,
        tags: ['configure', 'webservers', 'apply_role', 'install_nginx'],
      }

- name: Website | Configure Content Authoring loadbalancers
  hosts: contentauthoring_instances
  tasks:
    - include: configure/loadbalancers/configure-loadbalancers.yml
      vars:
        component: "contentauthoring"
      tags: ['configure', 'loadbalancers']

- name: Website | Configure Content Authoring DNS
  hosts: contentauthoring_instances
  tasks:
    - include: configure/dns/configure-dns.yml
      vars:
        component: "contentauthoring"
      tags: ['configure', 'dns']

- name: Website | Configure Content Delivery webservers
  hosts: contentdelivery_instances
  sudo: true
  roles:
    # Install docker service
    - {
        role: angstwad.docker_ubuntu,
        tags: ['configure', 'webservers', 'apply_role', 'install_docker'],
        when: install_docker == true
      }

    # Install docker-hippo-tomcat role configured as the Content Delivery container
    - {
        role: docker-hippo-tomcat,
        docker_image: "{{ contentdelivery_appserver_docker_image }}",
        container_name: "{{ contentdelivery_appserver_container_name }}",
        container_port: "{{ contentdelivery_appserver_container_port }}",
        distribution_src: "{{ contentdelivery_distribution_src_directory }}",
        contentstore_database_host: "{{ hostvars['localhost'].contentstore_database_host }}",
        contentstore_container_name: "{{ hostvars['localhost'].contentstore_container_name }}",
        url: "http://localhost:{{ contentdelivery_appserver_container_port }}/",
        expected_http_response: 200,
        tags: ['configure', 'webservers', 'apply_role', 'install_hippo'],
      }

    # Install docker-nginx-hippo configured to proxy requests to the Content Delivery container
    - {
        role: docker-nginx-hippo,
        docker_image: "{{ contentdelivery_reverseproxy_docker_image }}",
        container_name: "{{ contentdelivery_reverseproxy_container_name }}",
        container_port: "{{ contentdelivery_reverseproxy_container_port }}",
        appserver_container_name: "{{ contentdelivery_appserver_container_name }}",
        hippo_component: site,
        url: "http://localhost:{{ contentdelivery_reverseproxy_container_port }}/",
        expected_http_response: 200,
        tags: ['configure', 'webservers', 'apply_role', 'install_nginx'],
      }

- name: Website | Configure Content Delivery loadbalancers
  hosts: contentdelivery_instances
  tasks:
    - include: configure/loadbalancers/configure-loadbalancers.yml
      vars:
        component: "contentdelivery"
      tags: ['configure', 'loadbalancers']

- name: Website | Configure Content Delivery DNS
  hosts: contentauthoring_instances
  tasks:
    - include: configure/dns/configure-dns.yml
      vars:
        component: "contentdelivery"
      tags: ['configure', 'dns']