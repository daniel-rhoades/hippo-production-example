# Check pre-requisites
- include: pre-requisites.yml

# Commissioning block
- block:
  - name: "AWS | ELB | Create an ELB service"
    local_action:
      module: ec2_elb_lb
      name: "{{ elb_name }}"
      security_group_ids: "{{ elb_security_groups }}"
      state: "{{ ec2_elb_state }}"
      region: "{{ elb_region }}"
      subnets: "{{ elb_subnets }}"
      purge_subnets: "{{ elb_purge_subnets }}"
      cross_az_load_balancing: "{{ elb_cross_az_load_balancing }}"
      connection_draining_timeout: "{{ elb_connection_draining_timeout }}"
      listeners: "{{ elb_listeners }}"
      health_check: "{{ elb_health_check }}"
      stickiness: "{{ elb_stickiness }}"
    register: elb

  - debug: var=elb verbosity=4

  - name: "AWS | Route 53 | Define the zone"
    route53_zone:
      zone: "{{ route53_zone }}"
      state: "{{ route53_zone_state }}"
    register: route53zone

  - debug: var=route53zone verbosity=4

  - name: "AWS | Route 53 | Register the ELB in the zone"
    route53:
      command: "create"
      zone: "{{ route53_zone }}"
      record: "{{ route53_host }}"
      type: "A"
      value: "{{ elb.elb.dns_name }}"
      alias: true
      alias_hosted_zone_id: "{{ elb.elb.hosted_zone_id }}"
      alias_evaluate_target_health: "{{ route53_alias_evaluate_target_health }}"
      overwrite: "{{ route53_overwrite }}"
    register: route53host

  - debug: var=route53host verbosity=4

  when: ec2_elb_state == "present"

# Decomissioning block
- block:
  - name: "AWS | ELB | Decomission the ELB service"
    local_action:
      module: ec2_elb_lb
      name: "{{ elb_name }}"
      state: "{{ ec2_elb_state }}"

  when: ec2_elb_state == "absent"