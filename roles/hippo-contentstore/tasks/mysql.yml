#
# Setup Content Store on a MySQL Docker container
#
- include_vars: ../defaults/mysql-docker.yml

- name: Website | Role | Hippo Content Store | MySQL | Create destination directory
  file:
    path: "{{ contentstore_init_script_directory }}/initialise-db-script.sql"
    state: directory
    owner: "{{ system_user }}"
    group: "{{ system_group }}"

- name: Website | Role | Hippo Content Store | MySQL | Copy a templated DB initialisation script
  template:
    src: ../files/initialise-db-mysql.sql.j2
    dest: "{{ contentstore_init_script_directory }}/initialise-db-script.sql"

- name: Website | Role | Hippo Content Store | MySQL | Install and configure MySQL Docker image
  docker:
    name: "{{ mysql_docker_container_name }}"
    state: reloaded
    image: "{{ mysql_docker_container_image }}"
    ports:
      - "{{ mysql_docker_container_port }}:3306"
    volumes:
      - "{{ contentstore_init_script_directory }}:/docker-entrypoint-initdb.d:ro"
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"

- name: Website | Role | Hippo Content Store | MySQL | Verify MySQL is accepting requests
  wait_for:
    host: localhost
    port: 3306
    search_regex: "mysql_native_password"
    delay: 10
  sudo: False